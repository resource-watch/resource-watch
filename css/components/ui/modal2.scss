.c-modal2-overlay {
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background-color: rgba(17, 55, 80, 0.4);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: rgba(71, 44, 184, 0.1) 0px 5px 15px 0px;
  overflow: auto;
  background: rgba($color-black, .5);
  transition: all $animation-time $ease-in-sine;
  z-index: 100000; // Just to be sure that is over all the content

  @media screen and (min-width: map-get($breakpoints, medium)) {
    padding: 20px 0 40px;
  }
}

.c-modal2 {
  transition: transform $animation-time-2 $ease-out-cubic;
  transform: translateY(-15px);
  position: relative;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
  border: none;
  overflow-y: auto;
  overflow-x: hidden;
  border-radius: 0px;
  outline: none;
  padding: 0px;
  margin: auto;
  z-index: 1;
  max-width: $max-width-modal;

  @media screen and (min-width: map-get($breakpoints, medium)) {
    width: calc(100% - 50px);
  }

  .modal-content {
    position: relative;
    background: white;
    width: 100%;
    min-height: 150px;
    padding: $space-1 * 3;
    overflow-x: hidden;
    box-shadow: $thick-shadow;

    @media screen and (min-width: map-get($breakpoints, medium)) {
      padding: $space-1 * 6;
      margin-top: 30px;
      border-radius: 4px;
    }
  }

  .modal-close {
    display: block;
    position: absolute;
    top: 10px;
    right: 10px;
    width: 30px;
    height: 30px;
    padding: 0;
    border: 0;
    background-color: transparent;
    cursor: pointer;
    z-index: 2; /* Otherwise, it won't be reachable */

    @media screen and (min-width: map-get($breakpoints, medium)) {
      fill: $color-white;
      top: 0;
      right: 0;
    }

    &:hover {
      svg { fill: $color-primary; }
    }
  }

  // SIZES
  &.-medium {
    max-width: $max-width-modal-medium;
  }

  &.-large {
    max-width: $max-width-modal;
  }

  // PADDING
  &.-no-padding {
    .modal-content {
      padding: 0;
    }
  }

  &.ReactModal__Content--after-open {
    transform: translateY(0px);
  }
}
